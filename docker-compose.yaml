services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_LISTENERS: 'BROKER://kafka:9092,CONTROLLER://kafka:29093'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'BROKER://localhost:9092'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_CLUSTER_ID: 'ZxcCUGdCTxqS4PG3WiaYdQ'
      KAFKA_CFG_LOG_DIRS: '/var/lib/kafka/data'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    networks:
      - sentiment-network
    restart: on-failure

  producer:
    build: ./producer
    container_name: producer
    depends_on: 
      kafka:
        condition: service_started
    networks:
      - sentiment-network
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      TOPIC_NAME: ${KAFKA_TOPIC}
    restart: on-failure


  consumer:
    build: ./consumer 
    container_name: consumer
    depends_on: 
      kafka:
        condition: service_started
    networks:
      - sentiment-network
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      TOPIC_NAME: ${KAFKA_TOPIC}
    restart: on-failure


networks:
  sentiment-network:
    driver: bridge

volumes:
  kafka-data:
    driver: local


